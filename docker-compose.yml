services:
  frontend:
    build: ./frontend
    ports:
      - "8080:80"
    networks:
      - app-net
    profiles:
      - prod
  frontend-dev:
    build: ./frontend
    ports:
      - "8080:80"
    networks:
      - app-net
    volumes:
      - ./frontend/static:/usr/share/nginx/html/:ro
    profiles:
      - dev

  backend:
    build:
      context: ./backend
      args:
        NODE_ENV: ${NODE_ENV:-production}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mydb
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - app-net

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydb
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-net

volumes:
  db-data:

networks:
  app-net:
